.PHONY: all gtags tags lib test build_test clean $(extdir)

all: $(bins)

gtags: GTAGS GRTAGS GPATH

GTAGS GRTAGS GPATH:
	gtags -c

tags:
	ctags $(incdir)/*.hpp $(srcdir)/*.cpp

lib: $(libs)

test: build_test
	set -e; for b in $(bins) $(tstbins); do \
		echo -n "running '$${b}' ... "; \
		LD_LIBRARY_PATH=$(libdir):${LD_LIBRARY_PATH} $${b}; \
		echo done.; \
		gcov -bdflmr -o $(objdir) $(srcdir)/`basename $${b}`.cpp; \
	done

build_test: clean
	$(MAKE) config=Debug all $(tstbins)

clean:
	$(RM) GTAGS GRTAGS GPATH
	$(RM) tags
	$(RM) -r $(depdir) $(objdir) $(libdir) $(bindir) ./gmon.out ./*.gcov
	$(RM) -r $(imgdir)
ifdef extdir
	set -e; for d in $(extdir); do \
		$(MAKE) -C $${d} clean; \
	done
endif

Makefile: Makefile.config Makefile.files Makefile.flags Makefile.rules
	sed -i -e 's/\.\.\///' $@

Makefile.%: ../Makefile.%
	cp -uv $< $@

$(bindir)/%: $(objdir)/%.o $(libs) $(extdir)
	@mkdir -p $(dir $@)
	$(LINK.cc) -o $@ $< $(LDLIBS)

ifdef extdir
$(extdir):
	$(MAKE) -C $@ lib
endif

$(libs): $(filter-out $(patsubst $(srcdir)/%.cpp, $(objdir)/%.o, $(mains)), $(objs))
	@mkdir -p $(dir $@)
ifeq ($(link), static)
	$(AR) rsuv $@ $^
else ifeq ($(link), shared)
	$(LINK.cc) --shared -o $@ $^
endif

$(objdir)/%.o: $(srcdir)/%.cpp
	@mkdir -p $(dir $@)
	$(COMPILE.cc) -o $@ $(realpath $<)

$(depdir)/%.d: $(srcdir)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -MM -MT '$@ $(patsubst $(depdir)/%.d, $(objdir)/%.o, $@)' -MF $@ $<

# vim: set filetype=make :
