#!/bin/sh -e

case `ps --no-headers -o comm -p ${PPID}` in
svn) parent_is_vcs=true;;
git) set ${2} ${5}; parent_is_vcs=true;;
*)   parent_is_vcs= ;; # not set
esac

filter()
{
	[ $# -eq 1 ] || return
	case ${1} in
	*.d|*.o|*.lo|*.html|*.jpg|*.bdf|*.gcda|*.gcno|*.info|*.log|*.xml) echo `basename ${0}`: skipped: "'${1}'"; return 1;;
	*) return;;
	esac
}

detect_multiplexer()
{
	[ $# -eq 1 ] && [ ${1} = screen -o ${1} = tmux ] || return
	ps -A --no-headers -o pid,ppid,comm | awk '
	{
		pids[$1, "ppid"]    = $2
		pids[$1, "command"] = $3
	}
	END{
		for(pid = '${PPID}'; pid != 1; pid = pids[pid, "ppid"]){
			if(pids[pid, "command"] ~ /'${1}':?/){exit 0}
		}
		exit 1
	}'
}

invoke_vim()
{
	[ $# -eq 1 ] || return
	which vim > /dev/null || return
	vim --version | grep -m 1 -qe '+clientserver' || {
		echo `basename ${0}`: error: Vim with "'clientserver'" feature is required, but your Vim does not have the feature... >&2
		return 1
	}
	vim --serverlist | grep -m 1 -qie ^${1}\$ || {
		vim_startup_time=1
		detect_multiplexer screen && screen -t ${1} vim --servername ${1} && sleep ${vim_startup_time} && return
		detect_multiplexer tmux && tmux new-window -n ${1} vim --servername ${1} && sleep ${vim_startup_time} && return
	} || {
		uppercase_1=`echo ${1} | tr a-z A-Z`
		cat <<-EOF >&2
		`basename ${0}`: error: Vim server not found
		confirm that
		  - Vim server '${uppercase_1}' is running (Try again after to invoke vim '\$ vim --servername ${uppercase_1}' on another tty)
		  - X server is running (X11 forwarding is also enabled if via ssh)
		EOF
		return 1
	}
}

vim_diff()
{
	labels=
	vim_servername=`basename ${0}`
	while getopts L:s:u arg; do
		case ${arg} in
		L) labels="${labels} `echo ${OPTARG} | cut -d ' ' -f 1`";;
		s) vim_servername=${OPTARG};;
		u) ;;
		esac
	done
	shift `expr ${OPTIND} - 1`

	[ $# -eq 2 ] && filter ${2} || return
	trap '[ -n "${parent_is_vcs}" -a $? -ne 0 ] && kill ${PPID}' EXIT
	invoke_vim ${vim_servername} || return

	[ -z "${labels}" ] && labels='aaa bbb'
	tmpdir=`mktemp --tmpdir -d \`basename ${0}\`.XXXXXXXXXX`
	echo ${1} | grep -qe '^/tmp/svn-\|^/tmp/tempfile\.\|/\.svn/\|^/tmp/' && { tmp1=${tmpdir}/old/`echo ${labels} | cut -d ' ' -f  1 | sed -e 's/\.svn-base$//'`; mkdir -p `dirname ${tmp1}`; cp ${1} ${tmp1};}
	echo ${2} | grep -qe '^/tmp/svn-\|^/tmp/tempfile\.\|/\.svn/\|^/tmp/' && { tmp2=${tmpdir}/new/`echo ${labels} | cut -d ' ' -f  2 | sed -e 's/\.svn-base$//'`; mkdir -p `dirname ${tmp2}`; cp ${2} ${tmp2};}
	set ${tmp1:-${1}} ${tmp2:-${2}}
	vimscript=${tmpdir}/`basename ${0}`.vim
	cat <<EOF > ${vimscript}
set nocompatible
syntax on
filetype plugin indent on
set splitright
set fillchars=diff:\\ 
set diffopt=filler,vertical
set t_Co=256
" highlight DiffAdd    ctermfg=black ctermbg=lightblue   guifg=black guibg=lightblue
" highlight DiffChange ctermfg=black ctermbg=lightyellow guifg=black guibg=yellow
" highlight DiffDelete               ctermbg=lightred    guifg=white guibg=lightred
" highlight DiffText   ctermfg=white ctermbg=red         guifg=white guibg=red
view `readlink -m ${1}`
diffthis
diffsplit `readlink -m ${2}`
windo set nofoldenable nocursorline
augroup ${vim_servername}
	autocmd VimLeave * silent !rm -fr ${tmpdir}
augroup END
bdelete /dev/null
EOF
	vim --servername ${vim_servername} --remote-tab +"source ${vimscript}" /dev/null
}

invoke_diff()
{
	case "${1}" in
	--orig) shift; diff "$@";;
	*)      vim_diff "$@";;
	esac
}

invoke_diff "$@"
